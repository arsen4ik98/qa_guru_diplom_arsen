plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id "io.freefair.lombok" version "8.11"
}


tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
def aspectjWeaverVersion = "1.9.22",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.29.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7",
    ownerVersion = "1.0.4"

allure {
    report {
        version.set("2.29.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.29.0")
            }
        }
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

java {
    toolchain {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            'org.projectlombok:lombok:1.18.28',
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-java-commons:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task  bi_test(type: Test) {
    useJUnitPlatform {
        includeTags("bi_test")
    }
}